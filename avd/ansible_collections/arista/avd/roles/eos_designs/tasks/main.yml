---

- name: Generate device configuration in structured format (yaml).
  template:
    src: "structured-configuration.j2"
    dest: '{{ root_dir }}/intended/structured_configs/{{ inventory_hostname }}.yml'
  delegate_to: localhost
  check_mode: no
  changed_when: False
  tags: [build, provision]

- name: Merge generated device configuration with custom_structured_configuration_ variables (yaml)
  template:
    src: base/custom_structured_configuration.j2
    dest: '{{ root_dir }}/intended/structured_configs/{{ inventory_hostname }}.yml'
  delegate_to: localhost
  changed_when: False
  tags: [build, provision]

- name: Include device structured configuration, that was previously generated.
  include_vars: '{{ root_dir }}/intended/structured_configs/{{ inventory_hostname }}.yml'
  delegate_to: localhost
  tags: [build, provision]

- name: Generate fabric documentation
  run_once: true
  tags: [build, provision]
  delegate_to: localhost
  check_mode: no
  block:
    - name: Store checksum of existing fabric documentation
      ansible.builtin.stat:
        path: '{{ root_dir }}/documentation/fabric/{{ fabric_name }}-documentation.md'
        checksum_algorithm: sha224
        get_attributes: no
        get_checksum: yes
        get_mime: no
      register: doc_stat_result
    - name: Generate fabric documentation in Markdown Format.
      template:
        src: fabric-documentation.j2
        dest: '{{ root_dir }}/documentation/fabric/{{ fabric_name }}-documentation.md'
      changed_when: false
    - name: Generate TOC for fabric documentation
      add_toc:
        md_file: '{{ root_dir }}/documentation/fabric/{{ fabric_name }}-documentation.md'
        skip_lines: 3
      register: toc_result
      changed_when: toc_result.checksum | default('1') != doc_stat_result.stat.checksum | default('0')

- name: Generate fabric point-to-point links summary in csv format.
  template:
    src: documentation/fabric-p2p-links.j2
    dest: '{{ root_dir }}/documentation/fabric/{{ fabric_name }}-p2p-links.csv'
  delegate_to: localhost
  run_once: true
  check_mode: no
  tags: [build, provision]

- name: Generate fabric topology in csv format.
  template:
    src: documentation/fabric-topology.j2
    dest: '{{ root_dir }}/documentation/fabric/{{ fabric_name }}-topology.csv'
  delegate_to: localhost
  run_once: true
  check_mode: no
  tags: [build, provision]
