{# set leaf allowed vrfs, svis and vlans #}
{% set leaf.vrfs = []  %}
{% set leaf.svis = []  %}
{% set leaf.vlans = []  %}
{% for tenant in tenants | arista.avd.natural_sort if tenant in leaf.filter_tenants or "all" in leaf.filter_tenants %}
{%     if tenants[tenant].vrfs is defined %}
{%         for vrf in tenants[tenant].vrfs | arista.avd.natural_sort %}
{%             for svi in tenants[tenant].vrfs[vrf].svis | arista.avd.natural_sort %}
{%                 for svi_tag in tenants[tenant].vrfs[vrf].svis[svi].tags %}
{%                     if svi_tag in leaf.filter_tags or svi_tag == leaf.group or "all" in leaf.filter_tags %}
{%                         do leaf.vrfs.append( vrf ) %}
{%                         do leaf.svis.append( svi | int) %}
{%                         do leaf.vlans.append( svi | int) %}
{%                         break %}
{%                     endif %}
{%                 endfor %}
{%             endfor %}
{%         endfor %}
{%     endif %}
{%     if tenants[tenant].l2vlans is defined %}
{%         for l2vlan in tenants[tenant].l2vlans | arista.avd.natural_sort %}
{%             for vlan_tag in tenants[tenant].l2vlans[l2vlan].tags %}
{%                 if vlan_tag in leaf.filter_tags or vlan_tag == leaf.group or "all" in leaf.filter_tags %}
{%                     do leaf.vlans.append( l2vlan | int) %}
{%                     break %}
{%                 endif %}
{%             endfor %}
{%         endfor %}
{%     endif %}
{% endfor %}
{# Append all VRFs for tenants set in "always_include_vrfs_in_tenants" is set #}
{% if leaf.always_include_vrfs_in_tenants is arista.avd.defined %}
{%     for tenant in tenants | arista.avd.natural_sort if tenant in leaf.filter_tenants or "all" in leaf.filter_tenants %}
{%         if tenant in leaf.always_include_vrfs_in_tenants or "all" in leaf.always_include_vrfs_in_tenants %}
{%             for vrf in tenants[tenant].vrfs | arista.avd.natural_sort %}
{%                 do leaf.vrfs.append( vrf ) %}
{%             endfor %}
{%         endif %}
{%     endfor %}
{% endif %}
{% set leaf.vrfs = leaf.vrfs | unique  %}
{# Setting tenant static routes #}
{% set leaf.static_routes = [] %}
{% for tenant in tenants | arista.avd.natural_sort if tenant in leaf.filter_tenants or "all" in leaf.filter_tenants %}
{%     if tenants[tenant].vrfs is arista.avd.defined %}
{%         for vrf in tenants[tenant].vrfs if vrf in leaf.vrfs %}
{%             if tenants[tenant].vrfs[vrf].static_routes is arista.avd.defined %}
{%                 for static_route in tenants[tenant].vrfs[vrf].static_routes %}
{%                     if static_route.nodes is not arista.avd.defined or inventory_hostname in static_route.nodes %}
{%                         set entry = static_route %}
{%                         do entry.update( {'vrf':vrf} )%}
{%                         if entry.nodes is arista.avd.defined %}
{%                             do entry.pop( 'nodes' ) %}
{%                         endif %}
{%                         do leaf.static_routes.append( entry )%}
{%                     endif %}
{%                 endfor %}
{%             endif %}
{%         endfor %}
{%     endif %}
{% endfor %}
{# Setting tenant VRF L3 interfaces #}
{% set leaf.l3_interfaces = [] %}
{% for tenant in tenants | arista.avd.natural_sort if tenant in leaf.filter_tenants or "all" in leaf.filter_tenants %}
{%     if tenants[tenant].vrfs is arista.avd.defined %}
{%         for vrf in tenants[tenant].vrfs %}
{%             if tenants[tenant].vrfs[vrf].l3_interfaces is arista.avd.defined %}
{%                 for entry in tenants[tenant].vrfs[vrf].l3_interfaces %}
{%                     if entry.nodes is arista.avd.defined and entry.ip_addresses is arista.avd.defined and entry.interfaces is arista.avd.defined and inventory_hostname in entry.nodes %}
{%                         for node in entry.nodes %}
{%                             if node == inventory_hostname %}
{%                                 set entry_node = dict() %}
{%                                 do entry_node.update( {'vrf':vrf} )%}
{%                                 do entry_node.update( {'l3_interface':entry.interfaces[loop.index0]} ) %}
{%                                 do entry_node.update( {'ip_address':entry.ip_addresses[loop.index0]} ) %}
{%                                 do entry_node.update( entry ) %}
{%                                 do leaf.l3_interfaces.append( entry_node ) %}
{%                             endif %}
{%                         endfor %}
{%                         do leaf.vrfs.append( vrf ) %}
{%                     endif %}
{%                 endfor %}
{%             endif %}
{%         endfor %}
{%     endif %}
{% endfor %}
{# Checking for BGP peers inside tenant VRFs #}
{% set leaf.has_tenant_bgp_peers = false %}
{% for tenant in tenants | arista.avd.natural_sort if tenant in leaf.filter_tenants or "all" in leaf.filter_tenants %}
{%     if tenants[tenant].vrfs is arista.avd.defined %}
{%         for vrf in tenants[tenant].vrfs if vrf in leaf.vrfs %}
{%             if tenants[tenant].vrfs[vrf].bgp_peers is arista.avd.defined %}
{%                 for bgp_peer in tenants[tenant].vrfs[vrf].bgp_peers %}
{%                     if tenants[tenant].vrfs[vrf].bgp_peers[bgp_peer].nodes is arista.avd.defined %}
{%                         if inventory_hostname in tenants[tenant].vrfs[vrf].bgp_peers[bgp_peer].nodes %}
{%                             set leaf.has_tenant_bgp_peers = true %}
{%                             break %}
{%                         endif %}
{%                     endif %}
{%                 endfor %}
{%             endif %}
{%         endfor %}
{%     endif %}
{% endfor %}
