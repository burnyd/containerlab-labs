{# EBGP #}
{% if switch.overlay_routing_protocol == "ebgp" and switch.evpn_role in ["client", "server"] %}
    {{ bgp_peer_groups.EVPN_OVERLAY_PEERS.name | arista.avd.default("EVPN-OVERLAY-PEERS") }}:
      type: evpn
      update_source: Loopback0
      bfd: true
      ebgp_multihop: "{{ evpn_ebgp_multihop }}"
      password: "{{ bgp_peer_groups.EVPN_OVERLAY_PEERS.password }}"
      send_community: all
      maximum_routes: 0
{%     if switch.evpn_role == "server" %}
      next_hop_unchanged: true
{%     endif %}
{%     if switch.evpn_role == "server" and underlay_rfc5549 is arista.avd.defined(true)%}
      bgp_listen_range_prefix: {{ overlay_loopback_network_summary }}
      peer_filter: LEAF-AS-RANGE
{%     endif %}
{# IBGP #}
{% elif switch.overlay_routing_protocol == "ibgp" and switch.evpn_role in ["client", "server"] %}
    {{ bgp_peer_groups.EVPN_OVERLAY_PEERS.name | arista.avd.default("EVPN-OVERLAY-PEERS") }}:
      type: evpn
      update_source: Loopback0
      remote_as: {{ switch.bgp_as }}
      bfd: true
      password: "{{ bgp_peer_groups.EVPN_OVERLAY_PEERS.password }}"
      send_community: all
      maximum_routes: 0
{%     if switch.evpn_role == "server" %}
      route_reflector_client: true
{%     endif %}
{% endif %}
