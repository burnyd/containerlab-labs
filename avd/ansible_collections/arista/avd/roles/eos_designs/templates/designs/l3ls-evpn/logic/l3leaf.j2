{# Set l3leaf node variables #}
{% for l3leaf_node_group in l3leaf.node_groups | arista.avd.natural_sort %}
{%     for node in l3leaf.node_groups[l3leaf_node_group].nodes | arista.avd.natural_sort %}
{%         if node == inventory_hostname %}
{%             set leaf.group = l3leaf_node_group %}
{%             set leaf.id = l3leaf.node_groups[l3leaf_node_group].nodes[node].id %}
{%             set switch.mgmt_ip = l3leaf.node_groups[l3leaf_node_group].nodes[node].mgmt_ip %}
{%             set leaf.spine_interfaces = l3leaf.node_groups[l3leaf_node_group].nodes[node].spine_interfaces %}
{%             set leaf.filter_tenants = l3leaf.node_groups[l3leaf_node_group].filter.tenants| arista.avd.default(
                                         l3leaf.defaults.filter.tenants,
                                         [ 'all' ]  ) %}
{%             set leaf.always_include_vrfs_in_tenants = l3leaf.node_groups[l3leaf_node_group].filter.always_include_vrfs_in_tenants | arista.avd.default(
                                                         l3leaf.defaults.filter.always_include_vrfs_in_tenants) %}
{%             set leaf.igmp_snooping_enabled = l3leaf.node_groups[l3leaf_node_group].igmp_snooping_enabled | arista.avd.default(
                                                l3leaf.defaults.igmp_snooping_enabled,
                                                default_igmp_snooping_enabled ) %}
{%             set leaf.filter_tags = l3leaf.node_groups[l3leaf_node_group].filter.tags | arista.avd.default(
                                      l3leaf.defaults.filter.tags,
                                      [ 'all' ] ) %}
{%             set switch.max_spines = max_spines | arista.avd.default(
                                       spine.nodes | length ) %}
{%             set leaf.spines = l3leaf.node_groups[l3leaf_node_group].spines | arista.avd.default(
                                 l3leaf.defaults.spines ) %}
{%             set leaf.uplink_to_spine_interfaces = l3leaf.node_groups[l3leaf_node_group].uplink_to_spine_interfaces | arista.avd.default(
                                                     l3leaf.defaults.uplink_to_spine_interfaces ) %}
{%             set leaf.p2p_link_interface_speed = l3leaf.node_groups[l3leaf_node_group].p2p_link_interface_speed | arista.avd.default(
                                                   l3leaf.defaults.p2p_link_interface_speed ) %}
{%             set switch.platform = l3leaf.node_groups[l3leaf_node_group].platform | arista.avd.default(
                                     l3leaf.defaults.platform ) %}
{%             set switch.rack = l3leaf.node_groups[l3leaf_node_group].nodes[node].rack | arista.avd.default(
                                       l3leaf.node_groups[l3leaf_node_group].rack,
                                       l3leaf.defaults.rack ) %}
{%             if bgp_as is arista.avd.defined and switch.overlay_routing_protocol == 'ibgp' %}
{%                 set switch.bgp_as = bgp_as %}
{%             else %}
{%                 set switch.bgp_as = l3leaf.node_groups[l3leaf_node_group].nodes[node].bgp_as | arista.avd.default(
                                       l3leaf.node_groups[l3leaf_node_group].bgp_as,
                                       l3leaf.defaults.bgp_as ) %}
{%             endif %}
{%             set switch.router_id = overlay_loopback_network_summary | ipaddr('network') | ipmath(leaf.id + switch.max_spines) %}
{%             set switch.bgp_defaults = leaf_bgp_defaults | arista.avd.default([]) %}
{%             set leaf.virtual_router_mac_address = l3leaf.node_groups[l3leaf_node_group].virtual_router_mac_address | arista.avd.default(
                                                     l3leaf.defaults.virtual_router_mac_address ) %}
{%             set switch.spanning_tree_mode = l3leaf.node_groups[l3leaf_node_group].spanning_tree_mode | arista.avd.default(
                                               l3leaf.defaults.spanning_tree_mode ) %}
{%             set switch.spanning_tree_priority = l3leaf.node_groups[l3leaf_node_group].spanning_tree_priority | arista.avd.default(
                                                   l3leaf.defaults.spanning_tree_priority ) %}
{%             set switch.spanning_tree_root_super = l3leaf.node_groups[l3leaf_node_group].spanning_tree_root_super | arista.avd.default(
                                               l3leaf.defaults.spanning_tree_root_super ) %}
{%             set switch.mlag = l3leaf.node_groups[l3leaf_node_group].mlag | arista.avd.default(
                                 l3leaf.defaults.mlag,
                                 true ) %}
{%             set leaf.mlag_ibgp_origin_incomplete = l3leaf.node_groups[l3leaf_node_group].mlag_ibgp_origin_incomplete | arista.avd.default(
                                                      l3leaf.defaults.mlag_ibgp_origin_incomplete,
                                                      true) %}
{%             if loop.length == 2 and switch.mlag == true %}
{%                 set leaf.mlag = true %}
{%                 set leaf.mlag_group = l3leaf_node_group %}
{%                 set leaf.mlag_dual_primary_detection = l3leaf.node_groups[l3leaf_node_group].mlag_dual_primary_detection | arista.avd.default(
                                                          l3leaf.defaults.mlag_dual_primary_detection,
                                                          false ) %}
{%                 set leaf.mlag_interfaces = l3leaf.node_groups[l3leaf_node_group].mlag_interfaces | arista.avd.default(
                                              l3leaf.defaults.mlag_interfaces ) %}
{%                 if loop.index == 1 %}
{%                     set leaf.mlag_role = "primary" %}
{%                     set leaf.mlag_peer = loop.nextitem %}
{%                     set leaf.mlag_ip = (( l3leaf.node_groups[l3leaf_node_group].nodes[node].id -1 ) * 2 ) %}
{%                     set leaf.mlag_peer_ip = ((( l3leaf.node_groups[l3leaf_node_group].nodes[node].id -1 ) * 2 ) + 1 ) %}
{%                     set leaf.mlag_peer_id = l3leaf.node_groups[l3leaf_node_group].nodes[loop.nextitem].id %}
{%                     set leaf.mlag_peer_mgmt_ip = l3leaf.node_groups[l3leaf_node_group].nodes[loop.nextitem].mgmt_ip | ipaddr('address') %}
{%                 elif loop.index == 2 %}
{%                     set leaf.mlag_role = "secondary" %}
{%                     set leaf.mlag_peer = loop.previtem %}
{%                     set leaf.mlag_ip = ((( l3leaf.node_groups[l3leaf_node_group].nodes[loop.previtem].id -1 ) * 2 ) +1 ) %}
{%                     set leaf.mlag_peer_ip = (( l3leaf.node_groups[l3leaf_node_group].nodes[loop.previtem].id -1 ) * 2 )  %}
{%                     set leaf.mlag_peer_id = l3leaf.node_groups[l3leaf_node_group].nodes[loop.previtem].id  %}
{%                     set leaf.mlag_peer_mgmt_ip = l3leaf.node_groups[l3leaf_node_group].nodes[loop.previtem].mgmt_ip | ipaddr('address')  %}
{%                 endif %}
{%             else %}
{%                 set leaf.mlag = false %}
{%             endif %}
{%             set leaf.evpn_services_l2_only = l3leaf.node_groups[l3leaf_node_group].evpn_services_l2_only | arista.avd.default(
                                                l3leaf.defaults.evpn_services_l2_only,
                                                false ) %}
{#             Logic for EVPN Role for Overlay BGP Peerings #}
{#             For l3leaf the default value is client #}
{%             set switch.evpn_role = l3leaf.node_groups[l3leaf_node_group].evpn_role | arista.avd.default(
                                      l3leaf.defaults.evpn_role,
                                      'client' ) %}
{#             For l3leaf the default value for EVPN Route Servers is content of the spines variable set above. For safety we fall back to [] #}
{%             set switch.raw_evpn_route_servers = l3leaf.node_groups[l3leaf_node_group].evpn_route_servers | arista.avd.default(
                                      l3leaf.defaults.evpn_route_servers,
                                      leaf.spines,
                                      [] ) %}
{%         endif %}
{%     endfor %}
{% endfor %}
